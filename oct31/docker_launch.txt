nyck33@nyck33-ubuntu2304:~/Documents/cybersec/owaspZap/juice_shop_cursor_win11$ docker-compose up
Starting juice_shop_cursor_win11_db_1 ... done
Starting juice_shop_cursor_win11_juiceshop_1 ... done
Attaching to juice_shop_cursor_win11_db_1, juice_shop_cursor_win11_juiceshop_1
db_1         | 
db_1         | PostgreSQL Database directory appears to contain a database; Skipping initialization
db_1         | 
db_1         | 2023-10-31 11:40:23.253 UTC [1] LOG:  starting PostgreSQL 16.0 (Debian 16.0-1.pgdg120+1) on x86_64-pc-linux-gnu, compiled by gcc (Debian 12.2.0-14) 12.2.0, 64-bit
db_1         | 2023-10-31 11:40:23.253 UTC [1] LOG:  listening on IPv4 address "0.0.0.0", port 5432
db_1         | 2023-10-31 11:40:23.253 UTC [1] LOG:  listening on IPv6 address "::", port 5432
db_1         | 2023-10-31 11:40:23.261 UTC [1] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
db_1         | 2023-10-31 11:40:23.271 UTC [29] LOG:  database system was shut down at 2023-10-31 11:30:24 UTC
db_1         | 2023-10-31 11:40:23.278 UTC [1] LOG:  database system is ready to accept connections
juiceshop_1  | info: All dependencies in ./package.json are satisfied (OK)
juiceshop_1  | info: Detected Node.js version v18.18.2 (OK)
juiceshop_1  | info: Detected OS linux (OK)
juiceshop_1  | info: Detected CPU x64 (OK)
juiceshop_1  | info: Configuration default validated (OK)
juiceshop_1  | info: Entity models 19 of 19 are initialized (OK)
juiceshop_1  | info: Required file server.js is present (OK)
juiceshop_1  | info: Required file index.html is present (OK)
juiceshop_1  | info: Required file main.js is present (OK)
juiceshop_1  | info: Required file polyfills.js is present (OK)
juiceshop_1  | info: Required file styles.css is present (OK)
juiceshop_1  | info: Required file runtime.js is present (OK)
juiceshop_1  | info: Required file vendor.js is present (OK)
juiceshop_1  | info: Port 3000 is available (OK)
juiceshop_1  | info: Chatbot training data botDefaultTrainingData.json validated (OK)
juiceshop_1  | Executing (default): DROP TABLE IF EXISTS "Wallets" CASCADE;
juiceshop_1  | Executing (default): DROP TABLE IF EXISTS "SecurityAnswers" CASCADE;
juiceshop_1  | Executing (default): DROP TABLE IF EXISTS "SecurityQuestions" CASCADE;
juiceshop_1  | Executing (default): DROP TABLE IF EXISTS "Recycles" CASCADE;
juiceshop_1  | Executing (default): DROP TABLE IF EXISTS "Quantities" CASCADE;
juiceshop_1  | Executing (default): DROP TABLE IF EXISTS "PrivacyRequests" CASCADE;
juiceshop_1  | Executing (default): DROP TABLE IF EXISTS "Memories" CASCADE;
juiceshop_1  | Executing (default): DROP TABLE IF EXISTS "ImageCaptchas" CASCADE;
juiceshop_1  | Executing (default): DROP TABLE IF EXISTS "Feedbacks" CASCADE;
juiceshop_1  | Executing (default): DROP TABLE IF EXISTS "Deliveries" CASCADE;
juiceshop_1  | Executing (default): DROP TABLE IF EXISTS "Complaints" CASCADE;
juiceshop_1  | Executing (default): DROP TABLE IF EXISTS "Challenges" CASCADE;
juiceshop_1  | Executing (default): DROP TABLE IF EXISTS "Cards" CASCADE;
juiceshop_1  | Executing (default): DROP TABLE IF EXISTS "Captchas" CASCADE;
juiceshop_1  | Executing (default): DROP TABLE IF EXISTS "BasketItems" CASCADE;
juiceshop_1  | Executing (default): DROP TABLE IF EXISTS "Products" CASCADE;
juiceshop_1  | Executing (default): DROP TABLE IF EXISTS "Baskets" CASCADE;
juiceshop_1  | Executing (default): DROP TABLE IF EXISTS "Addresses" CASCADE;
juiceshop_1  | Executing (default): DROP TABLE IF EXISTS "Users" CASCADE;
juiceshop_1  | Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Addresses' AND tc.table_catalog = 'js_db'
juiceshop_1  | Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Baskets' AND tc.table_catalog = 'js_db'
juiceshop_1  | Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'BasketItems' AND tc.table_catalog = 'js_db'
juiceshop_1  | Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Captchas' AND tc.table_catalog = 'js_db'
juiceshop_1  | Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Cards' AND tc.table_catalog = 'js_db'
juiceshop_1  | Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Challenges' AND tc.table_catalog = 'js_db'
juiceshop_1  | Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Complaints' AND tc.table_catalog = 'js_db'
juiceshop_1  | Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Deliveries' AND tc.table_catalog = 'js_db'
juiceshop_1  | Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Feedbacks' AND tc.table_catalog = 'js_db'
juiceshop_1  | Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'ImageCaptchas' AND tc.table_catalog = 'js_db'
juiceshop_1  | Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Memories' AND tc.table_catalog = 'js_db'
juiceshop_1  | Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'PrivacyRequests' AND tc.table_catalog = 'js_db'
juiceshop_1  | Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Products' AND tc.table_catalog = 'js_db'
juiceshop_1  | Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Quantities' AND tc.table_catalog = 'js_db'
juiceshop_1  | Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Recycles' AND tc.table_catalog = 'js_db'
juiceshop_1  | Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'SecurityAnswers' AND tc.table_catalog = 'js_db'
juiceshop_1  | Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'SecurityQuestions' AND tc.table_catalog = 'js_db'
juiceshop_1  | Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Users' AND tc.table_catalog = 'js_db'
juiceshop_1  | Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Wallets' AND tc.table_catalog = 'js_db'
juiceshop_1  | Executing (default): DROP TABLE IF EXISTS "Addresses" CASCADE;
juiceshop_1  | Executing (default): DROP TABLE IF EXISTS "Baskets" CASCADE;
juiceshop_1  | Executing (default): DROP TABLE IF EXISTS "BasketItems" CASCADE;
juiceshop_1  | Executing (default): DROP TABLE IF EXISTS "Captchas" CASCADE;
juiceshop_1  | Executing (default): DROP TABLE IF EXISTS "Cards" CASCADE;
juiceshop_1  | Executing (default): DROP TABLE IF EXISTS "Challenges" CASCADE;
juiceshop_1  | Executing (default): DROP TABLE IF EXISTS "Complaints" CASCADE;
juiceshop_1  | Executing (default): DROP TABLE IF EXISTS "Deliveries" CASCADE;
juiceshop_1  | Executing (default): DROP TABLE IF EXISTS "Feedbacks" CASCADE;
juiceshop_1  | Executing (default): DROP TABLE IF EXISTS "ImageCaptchas" CASCADE;
juiceshop_1  | Executing (default): DROP TABLE IF EXISTS "Memories" CASCADE;
juiceshop_1  | Executing (default): DROP TABLE IF EXISTS "PrivacyRequests" CASCADE;
juiceshop_1  | Executing (default): DROP TABLE IF EXISTS "Products" CASCADE;
juiceshop_1  | Executing (default): DROP TABLE IF EXISTS "Quantities" CASCADE;
juiceshop_1  | Executing (default): DROP TABLE IF EXISTS "Recycles" CASCADE;
juiceshop_1  | Executing (default): DROP TABLE IF EXISTS "SecurityAnswers" CASCADE;
juiceshop_1  | Executing (default): DROP TABLE IF EXISTS "SecurityQuestions" CASCADE;
juiceshop_1  | Executing (default): DROP TABLE IF EXISTS "Users" CASCADE;
juiceshop_1  | Executing (default): DROP TABLE IF EXISTS "Wallets" CASCADE;
juiceshop_1  | Executing (default): DROP TABLE IF EXISTS "Users" CASCADE;
juiceshop_1  | Executing (default): CREATE TABLE IF NOT EXISTS "Users" ("id"  SERIAL , "username" VARCHAR(255) DEFAULT '', "email" VARCHAR(255) UNIQUE, "password" VARCHAR(255), "role" VARCHAR(255) DEFAULT 'customer', "deluxeToken" VARCHAR(255) DEFAULT '', "lastLoginIp" VARCHAR(255) DEFAULT '0.0.0.0', "profileImage" VARCHAR(255) DEFAULT '/assets/public/images/uploads/default.svg', "totpSecret" VARCHAR(255) DEFAULT '', "isActive" BOOLEAN DEFAULT true, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "deletedAt" TIMESTAMP WITH TIME ZONE, PRIMARY KEY ("id"));
juiceshop_1  | Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Users' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
juiceshop_1  | Executing (default): DROP TABLE IF EXISTS "Addresses" CASCADE;
juiceshop_1  | Executing (default): CREATE TABLE IF NOT EXISTS "Addresses" ("UserId" INTEGER REFERENCES "Users" ("id") ON DELETE NO ACTION ON UPDATE CASCADE, "id"  SERIAL , "fullName" VARCHAR(255), "mobileNum" INTEGER, "zipCode" VARCHAR(255), "streetAddress" VARCHAR(255), "city" VARCHAR(255), "state" VARCHAR(255), "country" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));
juiceshop_1  | Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Addresses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
juiceshop_1  | Executing (default): DROP TABLE IF EXISTS "Baskets" CASCADE;
juiceshop_1  | Executing (default): CREATE TABLE IF NOT EXISTS "Baskets" ("id"  SERIAL , "coupon" VARCHAR(255), "UserId" INTEGER REFERENCES "Users" ("id") ON DELETE NO ACTION ON UPDATE CASCADE, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));
juiceshop_1  | Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Baskets' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
juiceshop_1  | Executing (default): DROP TABLE IF EXISTS "Products" CASCADE;
juiceshop_1  | Executing (default): CREATE TABLE IF NOT EXISTS "Products" ("id"  SERIAL , "name" VARCHAR(255), "description" VARCHAR(255), "price" DECIMAL, "deluxePrice" DECIMAL, "image" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "deletedAt" TIMESTAMP WITH TIME ZONE, PRIMARY KEY ("id"));
juiceshop_1  | Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Products' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
juiceshop_1  | Executing (default): DROP TABLE IF EXISTS "BasketItems" CASCADE;
juiceshop_1  | Executing (default): CREATE TABLE IF NOT EXISTS "BasketItems" ("ProductId" INTEGER REFERENCES "Products" ("id") ON DELETE CASCADE ON UPDATE CASCADE, "BasketId" INTEGER REFERENCES "Baskets" ("id") ON DELETE CASCADE ON UPDATE CASCADE, "id"  SERIAL , "quantity" INTEGER, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, UNIQUE ("ProductId", "BasketId"), PRIMARY KEY ("id"));
juiceshop_1  | Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'BasketItems' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
juiceshop_1  | Executing (default): DROP TABLE IF EXISTS "Captchas" CASCADE;
juiceshop_1  | Executing (default): CREATE TABLE IF NOT EXISTS "Captchas" ("id"   SERIAL , "captchaId" INTEGER, "captcha" VARCHAR(255), "answer" VARCHAR(255), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));
juiceshop_1  | Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Captchas' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
juiceshop_1  | Executing (default): DROP TABLE IF EXISTS "Cards" CASCADE;
juiceshop_1  | Executing (default): CREATE TABLE IF NOT EXISTS "Cards" ("UserId" INTEGER REFERENCES "Users" ("id") ON DELETE NO ACTION ON UPDATE CASCADE, "id"  SERIAL , "fullName" VARCHAR(255), "cardNum" INTEGER, "expMonth" INTEGER, "expYear" INTEGER, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));
juiceshop_1  | Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Cards' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
juiceshop_1  | Executing (default): DROP TABLE IF EXISTS "Challenges" CASCADE;
juiceshop_1  | Executing (default): CREATE TABLE IF NOT EXISTS "Challenges" ("id"  SERIAL , "key" VARCHAR(255), "name" VARCHAR(255), "category" VARCHAR(255), "tags" VARCHAR(255), "description" VARCHAR(255), "difficulty" INTEGER, "hint" VARCHAR(255), "hintUrl" VARCHAR(255), "mitigationUrl" VARCHAR(255), "solved" BOOLEAN, "disabledEnv" VARCHAR(255), "tutorialOrder" NUMBER, "codingChallengeStatus" NUMBER, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));
db_1         | 2023-10-31 11:40:25.057 UTC [34] ERROR:  type "number" does not exist at character 331
db_1         | 2023-10-31 11:40:25.057 UTC [34] STATEMENT:  CREATE TABLE IF NOT EXISTS "Challenges" ("id"  SERIAL , "key" VARCHAR(255), "name" VARCHAR(255), "category" VARCHAR(255), "tags" VARCHAR(255), "description" VARCHAR(255), "difficulty" INTEGER, "hint" VARCHAR(255), "hintUrl" VARCHAR(255), "mitigationUrl" VARCHAR(255), "solved" BOOLEAN, "disabledEnv" VARCHAR(255), "tutorialOrder" NUMBER, "codingChallengeStatus" NUMBER, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));
juiceshop_1  | node:internal/process/promises:288
juiceshop_1  |             triggerUncaughtException(err, true /* fromPromise */);
juiceshop_1  |             ^
juiceshop_1  | 
juiceshop_1  | Error
juiceshop_1  |     at Query.run (/juice-shop/node_modules/sequelize/lib/dialects/postgres/query.js:50:25)
juiceshop_1  |     at /juice-shop/node_modules/sequelize/lib/sequelize.js:315:28
juiceshop_1  |     at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
juiceshop_1  |     at async PostgresQueryInterface.createTable (/juice-shop/node_modules/sequelize/lib/dialects/abstract/query-interface.js:98:12)
juiceshop_1  |     at async Challenge.sync (/juice-shop/node_modules/sequelize/lib/model.js:942:7)
juiceshop_1  |     at async Sequelize.sync (/juice-shop/node_modules/sequelize/lib/sequelize.js:377:9)
juiceshop_1  |     at async Object.start (/juice-shop/build/server.js:645:5) {
juiceshop_1  |   name: 'SequelizeDatabaseError',
juiceshop_1  |   parent: error: type "number" does not exist
juiceshop_1  |       at Parser.parseErrorMessage (/juice-shop/node_modules/pg-protocol/dist/parser.js:287:98)
juiceshop_1  |       at Parser.handlePacket (/juice-shop/node_modules/pg-protocol/dist/parser.js:126:29)
juiceshop_1  |       at Parser.parse (/juice-shop/node_modules/pg-protocol/dist/parser.js:39:38)
juiceshop_1  |       at Socket.<anonymous> (/juice-shop/node_modules/pg-protocol/dist/index.js:11:42)
juiceshop_1  |       at Socket.emit (node:events:517:28)
juiceshop_1  |       at addChunk (node:internal/streams/readable:335:12)
juiceshop_1  |       at readableAddChunk (node:internal/streams/readable:308:9)
juiceshop_1  |       at Readable.push (node:internal/streams/readable:245:10)
juiceshop_1  |       at TCP.onStreamRead (node:internal/stream_base_commons:190:23) {
juiceshop_1  |     length: 94,
juiceshop_1  |     severity: 'ERROR',
juiceshop_1  |     code: '42704',
juiceshop_1  |     detail: undefined,
juiceshop_1  |     hint: undefined,
juiceshop_1  |     position: '331',
juiceshop_1  |     internalPosition: undefined,
juiceshop_1  |     internalQuery: undefined,
juiceshop_1  |     where: undefined,
juiceshop_1  |     schema: undefined,
juiceshop_1  |     table: undefined,
juiceshop_1  |     column: undefined,
juiceshop_1  |     dataType: undefined,
juiceshop_1  |     constraint: undefined,
juiceshop_1  |     file: 'parse_type.c',
juiceshop_1  |     line: '270',
juiceshop_1  |     routine: 'typenameType',
juiceshop_1  |     sql: 'CREATE TABLE IF NOT EXISTS "Challenges" ("id"  SERIAL , "key" VARCHAR(255), "name" VARCHAR(255), "category" VARCHAR(255), "tags" VARCHAR(255), "description" VARCHAR(255), "difficulty" INTEGER, "hint" VARCHAR(255), "hintUrl" VARCHAR(255), "mitigationUrl" VARCHAR(255), "solved" BOOLEAN, "disabledEnv" VARCHAR(255), "tutorialOrder" NUMBER, "codingChallengeStatus" NUMBER, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));',
juiceshop_1  |     parameters: undefined
juiceshop_1  |   },
juiceshop_1  |   original: error: type "number" does not exist
juiceshop_1  |       at Parser.parseErrorMessage (/juice-shop/node_modules/pg-protocol/dist/parser.js:287:98)
juiceshop_1  |       at Parser.handlePacket (/juice-shop/node_modules/pg-protocol/dist/parser.js:126:29)
juiceshop_1  |       at Parser.parse (/juice-shop/node_modules/pg-protocol/dist/parser.js:39:38)
juiceshop_1  |       at Socket.<anonymous> (/juice-shop/node_modules/pg-protocol/dist/index.js:11:42)
juiceshop_1  |       at Socket.emit (node:events:517:28)
juiceshop_1  |       at addChunk (node:internal/streams/readable:335:12)
juiceshop_1  |       at readableAddChunk (node:internal/streams/readable:308:9)
juiceshop_1  |       at Readable.push (node:internal/streams/readable:245:10)
juiceshop_1  |       at TCP.onStreamRead (node:internal/stream_base_commons:190:23) {
juiceshop_1  |     length: 94,
juiceshop_1  |     severity: 'ERROR',
juiceshop_1  |     code: '42704',
juiceshop_1  |     detail: undefined,
juiceshop_1  |     hint: undefined,
juiceshop_1  |     position: '331',
juiceshop_1  |     internalPosition: undefined,
juiceshop_1  |     internalQuery: undefined,
juiceshop_1  |     where: undefined,
juiceshop_1  |     schema: undefined,
juiceshop_1  |     table: undefined,
juiceshop_1  |     column: undefined,
juiceshop_1  |     dataType: undefined,
juiceshop_1  |     constraint: undefined,
juiceshop_1  |     file: 'parse_type.c',
juiceshop_1  |     line: '270',
juiceshop_1  |     routine: 'typenameType',
juiceshop_1  |     sql: 'CREATE TABLE IF NOT EXISTS "Challenges" ("id"  SERIAL , "key" VARCHAR(255), "name" VARCHAR(255), "category" VARCHAR(255), "tags" VARCHAR(255), "description" VARCHAR(255), "difficulty" INTEGER, "hint" VARCHAR(255), "hintUrl" VARCHAR(255), "mitigationUrl" VARCHAR(255), "solved" BOOLEAN, "disabledEnv" VARCHAR(255), "tutorialOrder" NUMBER, "codingChallengeStatus" NUMBER, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));',
juiceshop_1  |     parameters: undefined
juiceshop_1  |   },
juiceshop_1  |   sql: 'CREATE TABLE IF NOT EXISTS "Challenges" ("id"  SERIAL , "key" VARCHAR(255), "name" VARCHAR(255), "category" VARCHAR(255), "tags" VARCHAR(255), "description" VARCHAR(255), "difficulty" INTEGER, "hint" VARCHAR(255), "hintUrl" VARCHAR(255), "mitigationUrl" VARCHAR(255), "solved" BOOLEAN, "disabledEnv" VARCHAR(255), "tutorialOrder" NUMBER, "codingChallengeStatus" NUMBER, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));',
juiceshop_1  |   parameters: {}
juiceshop_1  | }
juiceshop_1  | 
juiceshop_1  | Node.js v18.18.2
db_1         | 2023-10-31 11:40:25.079 UTC [34] LOG:  could not receive data from client: Connection reset by peer
juice_shop_cursor_win11_juiceshop_1 exited with code 1
db_1         | 2023-10-31 11:45:23.370 UTC [27] LOG:  checkpoint starting: time
db_1         | 2023-10-31 11:45:31.621 UTC [27] LOG:  checkpoint complete: wrote 84 buffers (0.5%); 0 WAL file(s) added, 0 removed, 0 recycled; write=8.132 s, sync=0.105 s, total=8.252 s; sync files=73, longest=0.003 s, average=0.002 s; distance=350 kB, estimate=350 kB; lsn=0/19ABF38, redo lsn=0/19ABF00
